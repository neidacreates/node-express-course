Create a file in the starter directory called QuizAnswers2.txt. Put answers to the following questions in it.

1. In this lesson, you created a middleware function called asyncWrapper. Why?
The controller code was very repetitive with the try catch blocks for every controller. So this middleware function handles errors in one centralized place so you don't have to have error handling logic in every controller.

2. Suppose that you want to make sure that both a status code and an error message are sent back to the user when they request the URL for a task that does not exist. Assume that youâ€™ve created a CustomAPIError class and an error handler that references that class. Complete the code:

const getTask = asyncWrapper(async (req, res, next) => {  
  const { id: taskID } = req.params;  
  const task = await Task.findOne({ _id: taskID });  
  if (!task) {  
     throw new CustomAPIError(`Task with id ${taskID} not found`, 404);  
  }  
  res.status(200).json({ task });  
});  
